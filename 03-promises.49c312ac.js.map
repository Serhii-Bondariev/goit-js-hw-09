{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAMsD,SAA7CC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZMQ,SAASC,cAAc,SAgD/BC,iBAAiB,UA/BA,SAAAC,GACpBA,EAAEC,iBAe0C,IAZb,IAEZC,EAAfF,EAAEG,cADJC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAIrBC,EAAeC,OAAOJ,EAAMK,OAC5BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAE9BG,EAAeL,EAGVM,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrC3B,EAAc2B,EAAGD,GACdE,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAEjB4B,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAEvEgC,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAElB4B,EAAAhC,GAASiC,OAAOI,QAAQ,sBAAuCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAEzEwB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Імпортуємо бібліотеку Notiflix для відображення повідомлень\nimport Notiflix from 'notiflix';\n\n// Вибираємо форму з класом \"form\"\nconst form = document.querySelector(\".form\");\n\n// Функція для створення об'єкта Promise з випадковим успіхом або невдачею\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Обробник події відправки форми\nconst submitHandler = e => {\n  e.preventDefault();\n\n  // Отримуємо доступ до елементів форми\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  // Отримуємо числові значення з полів форми\n  const initialDelay = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const totalAmount = Number(amount.value);\n\n  let currentDelay = initialDelay;\n\n  // Запускаємо цикл для створення та виконання об'єктів Promise\n  for (let i = 1; i <= totalAmount; i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        // Відображаємо повідомлення про успіх\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // Відображаємо повідомлення про невдачу\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += stepDelay;\n  }  \n};\n\n// Додаємо обробник події відправки форми\nform.addEventListener('submit', submitHandler);\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","initialDelay","Number","value","stepDelay","totalAmount","currentDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.49c312ac.js.map"}