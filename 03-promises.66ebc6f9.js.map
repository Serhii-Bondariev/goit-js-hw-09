{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAMsD,SAA7CC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZAQ,SAASC,cAAc,SAgD/BC,iBAAiB,UA/BAC,IACpBA,EAAEC,iBAG6B,MAC7BC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAGAC,EAAeC,OAAOL,EAAMM,OAC5BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElC,IAAIG,EAAeL,EAGyB,IAAvC,IAAIM,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrC1B,EAAc0B,EAAGD,GACdE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MAEjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEzE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAElB0B,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoB/B,QAAiBC,MAAU,IAE3EuB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Імпортуємо бібліотеку Notiflix для відображення повідомлень\nimport Notiflix from 'notiflix';\n\n// Вибираємо форму з класом \"form\"\nconst form = document.querySelector(\".form\");\n\n// Функція для створення об'єкта Promise з випадковим успіхом або невдачею\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Обробник події відправки форми\nconst submitHandler = e => {\n  e.preventDefault();\n\n  // Отримуємо доступ до елементів форми\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  // Отримуємо числові значення з полів форми\n  const initialDelay = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const totalAmount = Number(amount.value);\n\n  let currentDelay = initialDelay;\n\n  // Запускаємо цикл для створення та виконання об'єктів Promise\n  for (let i = 1; i <= totalAmount; i += 1) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        // Відображаємо повідомлення про успіх\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // Відображаємо повідомлення про невдачу\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    currentDelay += stepDelay;\n  }  \n};\n\n// Додаємо обробник події відправки форми\nform.addEventListener('submit', submitHandler);\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","initialDelay","Number","value","stepDelay","totalAmount","currentDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.66ebc6f9.js.map"}